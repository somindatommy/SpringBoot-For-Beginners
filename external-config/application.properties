spring.application.name=payment-manager

spring.profiles.active=Dev,H2Repo

###### Authorization related configurations ######
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://api.asgardeo.io/t/springdemo/oauth2/token
# Set this if the Auth server does not support OIDC discovery.
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://api.asgardeo.io/t/springdemo/oauth2/jwks

######## MySQL Database related configurations ######
#spring.datasource.url=jdbc:mysql://localhost:3306/Payments_Db
#spring.datasource.username=root
#spring.datasource.password=root
## Show the sql queries in the logger.
#spring.jpa.show-sql=true
## (Optional) Format the logged queries for a more readable way.
## spring.jpa.properties.hibernate.format_sql=true
## For hibernate to generate SQL queries optimized for a Mysql database.
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

###### H2 Database related configurations ######
# Access the h2 console from browser.
spring.h2.console.enabled=true
spring.datasource.generate-unique-name=false
spring.datasource.name=Payments_Db
spring.datasource.username=sa
# No password is set here.
# spring.datasource.password=sa

# Add this when the script needs to execute. Usually this is done for the H2 in-memory dbs.
spring.sql.init.mode=always
# Add this to init schema if the schema.sql file is not in the resources directory.
spring.sql.init.schema-locations=classpath:dbscripts/h2/schema.sql

# Since we have added JPA, spring handles initiation differently. This is added so that initial deta insertion may
# happen as expected.
spring.jpa.hibernate.ddl-auto=update

###### Logging related configurations #####
#logging.level.org.springframework.security=DEBUG